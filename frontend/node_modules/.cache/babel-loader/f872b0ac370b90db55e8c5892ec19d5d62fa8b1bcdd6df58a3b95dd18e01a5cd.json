{"ast":null,"code":"var _jsxFileName = \"/Users/misha_westside/Desktop/3205test/frontend/src/components/Results/Results.tsx\";\nimport React from \"react\";\nimport Error from \"../Error/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function (_ref) {\n  let {\n    data,\n    isFound,\n    error\n  } = _ref;\n  const renderData = data => {\n    return data.map(item => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"results__result\",\n          children: item.email\n        }, item.number + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"results__result\",\n          children: item.number\n        }, item.number + 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, item.number, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isFound ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"results\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"results__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"results__header\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"results__header\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), renderData(data)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"names":["React","Error","jsxDEV","_jsxDEV","Fragment","_Fragment","_ref","data","isFound","error","renderData","map","item","children","className","email","number","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/misha_westside/Desktop/3205test/frontend/src/components/Results/Results.tsx"],"sourcesContent":["import React from \"react\";\nimport Error from \"../Error/Error\";\n\ntype User = {\n    email: string;\n    number: string;\n};\n\ntype Props = {\n    data: User[];\n    isFound: boolean;\n    error: number;\n};\n\nexport default function ({ data, isFound, error }: Props) {\n    const renderData = (data: User[]) => {\n        return data.map((item) => {\n            return (\n                <React.Fragment key={item.number}>\n                    <li key={item.number + 1} className=\"results__result\">\n                        {item.email}\n                    </li>\n                    <li key={item.number + 2} className=\"results__result\">\n                        {item.number}\n                    </li>\n                </React.Fragment>\n            );\n        });\n    };\n    return (\n        <>\n            {isFound ? (\n                <section className=\"results\">\n                    <ul className=\"results__wrapper\">\n                        <h2 className=\"results__header\">Email</h2>\n                        <h2 className=\"results__header\">Number</h2>\n                        {renderData(data)}\n                    </ul>\n                </section>\n            ) : (\n                <Error error={error}></Error>\n            )}\n        </>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAanC,eAAe,UAAAC,IAAA,EAA2C;EAAA,IAAjC;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAAH,IAAA;EACpD,MAAMI,UAAU,GAAIH,IAAY,IAAK;IACjC,OAAOA,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAK;MACtB,oBACIT,OAAA,CAACH,KAAK,CAACI,QAAQ;QAAAS,QAAA,gBACXV,OAAA;UAA0BW,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAChDD,IAAI,CAACG;QAAK,GADNH,IAAI,CAACI,MAAM,GAAG,CAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CAAC,eACLjB,OAAA;UAA0BW,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAChDD,IAAI,CAACI;QAAM,GADPJ,IAAI,CAACI,MAAM,GAAG,CAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CAAC;MAAA,GANYR,IAAI,CAACI,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOhB,CAAC;IAEzB,CAAC,CAAC;EACN,CAAC;EACD,oBACIjB,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACKL,OAAO,gBACJL,OAAA;MAASW,SAAS,EAAC,SAAS;MAAAD,QAAA,eACxBV,OAAA;QAAIW,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAC5BV,OAAA;UAAIW,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1CjB,OAAA;UAAIW,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC1CV,UAAU,CAACH,IAAI,CAAC;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAEVjB,OAAA,CAACF,KAAK;MAACQ,KAAK,EAAEA;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAC/B,gBACH,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}