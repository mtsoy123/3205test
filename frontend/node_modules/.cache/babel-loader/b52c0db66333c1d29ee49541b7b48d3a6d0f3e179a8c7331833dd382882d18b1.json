{"ast":null,"code":"const headers = {\n  \"Content-Type\": \"application/json\"\n};\nclass Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = void 0;\n    this._headers = void 0;\n    this._checkResponse = (url, options) => {\n      return fetch(url, options).then(res => res.ok ? res.json() : Promise.reject(res.status));\n    };\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  submit(query) {\n    return this._checkResponse(this._baseUrl, {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify(query)\n    });\n  }\n  test() {\n    return fetch(\"http://localhost:4000/\");\n  }\n}\nexport const api = new Api({\n  baseUrl: \"http://localhost:4000/\",\n  headers: headers\n});","map":{"version":3,"names":["headers","Api","constructor","_ref","baseUrl","_baseUrl","_headers","_checkResponse","url","options","fetch","then","res","ok","json","Promise","reject","status","submit","query","method","body","JSON","stringify","test","api"],"sources":["/Users/misha_westside/Desktop/3205test/frontend/src/utils/api.ts"],"sourcesContent":["const headers: HeadersInit = {\n    \"Content-Type\": \"application/json\",\n};\n\ntype apiProperties = {\n    baseUrl: string;\n    headers: HeadersInit;\n};\n\ntype query = {\n    email: string;\n    number?: string; //todo check\n};\n\nclass Api {\n    private readonly _baseUrl: string;\n    private readonly _headers: HeadersInit;\n\n    constructor({ baseUrl, headers }: apiProperties) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    protected _checkResponse = (\n        url: string,\n        options: RequestInit\n    ): Promise<any> => {\n        return fetch(url, options).then((res) =>\n            res.ok ? res.json() : Promise.reject(res.status)\n        );\n    };\n\n    submit(query: query) {\n        return this._checkResponse(this._baseUrl, {\n            headers: this._headers,\n            method: \"POST\",\n            body: JSON.stringify(query),\n        });\n    }\n\n    test() {\n        return fetch(\"http://localhost:4000/\");\n    }\n}\n\nexport const api = new Api({\n    baseUrl: \"http://localhost:4000/\",\n    headers: headers,\n});\n"],"mappings":"AAAA,MAAMA,OAAoB,GAAG;EACzB,cAAc,EAAE;AACpB,CAAC;AAYD,MAAMC,GAAG,CAAC;EAINC,WAAWA,CAAAC,IAAA,EAAsC;IAAA,IAArC;MAAEC,OAAO;MAAEJ;IAAuB,CAAC,GAAAG,IAAA;IAAA,KAH9BE,QAAQ;IAAA,KACRC,QAAQ;IAAA,KAOfC,cAAc,GAAG,CACvBC,GAAW,EACXC,OAAoB,KACL;MACf,OAAOC,KAAK,CAACF,GAAG,EAAEC,OAAO,CAAC,CAACE,IAAI,CAAEC,GAAG,IAChCA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CACnD,CAAC;IACL,CAAC;IAXG,IAAI,CAACZ,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACE,QAAQ,GAAGN,OAAO;EAC3B;EAWAkB,MAAMA,CAACC,KAAY,EAAE;IACjB,OAAO,IAAI,CAACZ,cAAc,CAAC,IAAI,CAACF,QAAQ,EAAE;MACtCL,OAAO,EAAE,IAAI,CAACM,QAAQ;MACtBc,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK;IAC9B,CAAC,CAAC;EACN;EAEAK,IAAIA,CAAA,EAAG;IACH,OAAOd,KAAK,CAAC,wBAAwB,CAAC;EAC1C;AACJ;AAEA,OAAO,MAAMe,GAAG,GAAG,IAAIxB,GAAG,CAAC;EACvBG,OAAO,EAAE,wBAAwB;EACjCJ,OAAO,EAAEA;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}